generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(uuid()) @map("id")
  email       String      @unique
  password    String?
  firstName   String
  lastName    String
  gender      String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  googleId    String?     @unique
  birthDate   DateTime
  age         Int?
  journalAIs  JournalAI[]
  moodEntries MoodEntry[]
  sessions    Session[]

  @@map("User")
}

model Session {
  id        String   @id @default(uuid()) @map("id")
  userId    String   @map("userId")
  expires   DateTime
  data      String?
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("Session")
}

model MoodEntry {
  id        String     @id @default(uuid()) @map("id")
  userId    String     @map("userId")
  emotionId BigInt     @map("emotionId")
  createdAt DateTime   @default(now())
  journalId BigInt?    @map("journalId")
  emotion   Emotion    @relation(fields: [emotionId], references: [id])
  journalAI JournalAI? @relation(fields: [journalId], references: [id])
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("MoodEntry")
}

model Emotion {
  id          BigInt      @id @default(autoincrement()) @map("id")
  name        String      @unique
  blogs       Blog[]
  journalAIs  JournalAI[]
  moodEntries MoodEntry[]

  @@map("Emotion")
}

model JournalAI {
  id          BigInt      @id @default(autoincrement()) @map("id")
  createdAt   DateTime    @default(now())
  recap       String
  emotionId   BigInt      @map("emotionId")
  userId      String      @map("user_id")
  emotion     Emotion     @relation(fields: [emotionId], references: [id])
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  moodEntries MoodEntry[]

  @@map("JournalAI")
}

model Blog {
  id          String   @id @default(uuid()) @map("id")
  title       String?
  description String
  createdAt   DateTime @default(now())
  emotionId   BigInt   @map("emotionId")
  emotion     Emotion  @relation(fields: [emotionId], references: [id])

  @@map("Blog")
}
